;* Yggdrasil (TM) Core Operating System (MCS-51): Extarnal Memory Interface (EMIF) Library
;* Copyright (C) DeRemee Systems, IXE Electronics LLC
;* Portions copyright IXE Electronics LLC, Republic Robotics, FemtoLaunch, FemtoSat, FemtoTrack, Weland
;* This work is made available under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
;* To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/.

$INCLUDE (System.inc)
$INCLUDE (System_Const.inc)

PUBLIC  LEMIFCFGET,     LEMIFCNGET,     LEMIFCFSET,   LEMIFCNSET
PUBLIC  LEMIFEMDGET,    LEMIFEMDSET,    LEMIFSELXRAM, LEMIFSELXSPLBS
PUBLIC  LEMIFSELXSPLES, LEMIFSELXSPLNB

LEMIF_ABSTRACTION SEGMENT CODE
RSEG  LEMIF_ABSTRACTION

;LEMIF ABSTRACTION
;RESTORES THE EMI0CF REGISTER FROM THE STACK
LEMIFCFGET PROC
  MOV   A, EMI0CF
  CLR   C
  RET
ENDP


;RESTORES THE EMI0CN REGISTER FROM THE STACK
LEMIFCNGET  PROC
  MOV   A, EMI0CN
  CLR   C
  RET
ENDP

;SAVES THE EMI0CF REGISTER ON THE STACK
LEMIFCFSET  PROC
  MOV   EMI0CF, A
  CLR   C
  RET
ENDP


;SAVES THE EMI0CN REGISTER ON THE STACK
LEMIFCNSET  PROC
  MOV   EMI0CN, A
  CLR   C
  RET
ENDP

;COPIES THE EMD BITS INTO ACC.1-ACC.0
LEMIFEMDGET PROC
  ;MASK OUT ALL BUT EMD BITS
  MOV		A, #EMD
  ANL		A, EMI0CF
  ;SHIFT ACC.1-ACC.0 INTO PLACE
  CLR	  C
  RRC		A
  CLR		C
  RRC		A
  CLR		C
  RET
ENDP


;SETS THE EMD BITS TO THE VALUE IN ACC.1-ACC.0
LEMIFEMDSET PROC
  PUSH  B
  ;SHIFT ACC.1-ACC.0 INTO PLACE
  CLR   C
  RLC   A
  CLR   C
  RLC   A
  MOV   B, A
  ;CLEAR EMD BITS
  MOV   A, #EMD XOR 0xFF
  ANL   A, EMI0CF
  ;COPY ACC.1-ACC.0 TO EMD BITS
  ORL   A, B
  MOV   EMI0CF, A
  ;RESTORE REGISTERS & RETURN
  POP   B
  CLR   C
  RET
ENDP


;SETS THE LEMIF PAGE TO THE VALUE IN A
LEMIFPAGESET  PROC
  MOV   EMI0CN, A
  CLR   C
  RET
ENDP

;CONFIGURES THE MCU SO MOVX INSTRUCTIONS ACCESS ONLY XRAM
LEMIFSELXRAM  PROC
  PUSH  ACC
  ;CLEAR EMD BITS
  MOV   A, #(EMD XOR 0xFF)
  ANL   A, EMI0CF
  ;SET EMD BITS TO PROPER VALUE
  ORL   A, #EMDX
  MOV   EMI0CF, A
  ;RESTORE REGISTERS & RETURN
  POP   ACC
  CLR   C
  RET
ENDP


;CONFIGURES THE MCU SO MOVX INSTRUCTIONS ACCESS XRAM AND
;EXTERNAL RAM WITHOUT BANK SELECT
LEMIFSELXSPLBS  PROC
  PUSH  ACC
  ;CLEAR EMD BITS
  MOV   A, #(EMD XOR 0xFF)
  ANL   A, EMI0CF
  ;SET EMD BITS TO PROPER VALUE
  ORL   A, #EMDXBS
  MOV   EMI0CF, A
  ;RESTORE REGISTERS & RETURN
  POP   ACC
  RET
ENDP


;CONFIGURES THE MCU SO MOVX INSTRUCTIONS ACCESS ONLY EXTERNAL RAM
LEMIFSELXSPLES  PROC
  PUSH  ACC
  ;CLEAR EMD BITS
  MOV   A, #(EMD XOR 0xFF)
  ANL   A, EMI0CF
  ;SET EMD BITS TO PROPER VALUE
  ORL   A, #EMDEXT
  MOV   EMI0CF, A
  ;RESTORE REGISTERS & RETURN
  POP   ACC
  RET
ENDP


;CONFIGURES THE MCU SO MOVX INSTRUCTIONS ACCESS XRAM AND
;EXTERNAL RAM WITH BANK SELECT
LEMIFSELXSPLNB  PROC
  PUSH  ACC
  ;CLEAR EMD BITS
  MOV   A, #EMD
  XRL   A, EMI0CF
  ;SET EMD BITS TO PROPER VALUE
  ORL   A, #EMDXNB
  MOV   EMI0CF, A
  ;RESTORE REGISTERS & RETURN
  POP   ACC
  RET
ENDP

END
